- comments ||= Comment.where(:image_id => nil).reverse.paginate(:per_page => 15, :page => params[:wall_page])
- comment_resource ||= Comment.new
-# name is mandatory so we can tell the comment sections apart, turns into an id
  ex: id="new_comment_<name>"  See _form.html.html for details

- if comment_resource
  = render 'comments/form', {:comment_resource => comment_resource, :name => name}

= will_paginate comments, :class => :wall_pagination, :param_name => :wall_page

- comments.each do |comment|
  = render comment

= will_paginate comments, :class => :wall_pagination, :param_name => :wall_page

- content_for(:javascripts) do
  :javascript
    function wall_ajax_href(href) {
      return "#{comments_path}" + '?' + href.split('?')[1];
    };
    function wall_pagination_js(link) {
      log(link);
      $(link)
        .attr('data-remote', 'true')
        .bind("ajax:success", function(xhr, data, status) {
          // NOTE: xhr => js Object, data => rendered HTML content, status => 'success'
          $('#wall .comment').hide('fast').remove();
          $('#wall .wall_pagination').hide('fast').remove();
          $('#comment_form_wall').after(data);
          $('.wall_pagination a').each(function() {wall_pagination_js(this)});
        });
      link
        .href = wall_ajax_href(link.href);
    };
    $('.wall_pagination a').each(function() {wall_pagination_js(this)});

